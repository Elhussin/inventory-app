name: Build Executables

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python: [3.11]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build executables
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
              pyinstaller --onefile --windowed --noconsole --name="Inventory" \
              --add-data="app:app" \
              --hidden-import="PIL._tkinter_finder" \
              --hidden-import="PIL" \
              --hidden-import="Pillow" \
              --additional-hooks-dir=. \
              main.py

              mkdir -p dist_win
              mv dist/Inventory.exe dist_win/

          else
              pyinstaller --onefile --windowed --noconsole --name="Inventory" \
              --add-data="app:app" \
              --hidden-import="PIL._tkinter_finder" \
              --hidden-import="PIL" \
              --hidden-import="Pillow" \
              --additional-hooks-dir=. \
              main.py
              mkdir -p dist_linux
              mv dist/Inventory dist_linux/
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-executables
          path: ${{ runner.os == 'Windows' && 'dist_win/*' || 'dist_linux/*' }}
